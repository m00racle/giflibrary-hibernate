group 'com.mooracle'
version '1.0-SNAPSHOT'

//ENTRY 1
/** ENTRY 1: Preparing the Gradle Build
 *  1.  This is different approach to the SPRING WITH HIBERNATE COURSE, we want to learn what the hell is happening by
 *      re-creating the whole project structure up to its initial commits but using the latest Gradle dependencies.
 *  2.  We start with building a Spring framework plugin and dependencies. In here we also initializng the thymeleaf
 *      templates which also includes spring-boot-starter (this is the keyword to search in maven central repository)
 *  3.  After we add spring-boot and thymeleaf we need to add feature that generate hash ID which is a unique generated
 *      ID separate from the ID that we give to ceratin Gif object. This will be achieved also using external libraries
 *      which dependencies are manage by Gradle
 *  4.  Next we need to build Object Relational Mapping (ORM) external libraries that map relational database into our
 *      Spring app. Then add hibernate to manage it using external libraries
 *  5.  To use relational mapping we need stable connection to a database. Database connection object takes time to
 *      construct, yet it is essential to our relational mapping. We need the ability to make Database Connection
 *      Pooling (DBCP) which allows our app to reuse database connection object to establish frequent connection to
 *      the remote database. This external libraries are part of apache.tomcat
 *  6.  If we want to incorporate app using a database we need the database itself. Thus we need external libraries of
 *      the database we want to use. In this case we want to use H2 which will be manage by hibernate. We choose H2
 *      because it allows a range of connectivity options:
 *          - From memory (local) database that are created and destroyed when you kill the app.
 *          - The local database that stays even after you kill the app.
 *          - Single file database than can be stored locally so that you don't have to start a database server
 *          - Full server based database which require us to start a database server (this is what we want to learn)
 *      WARNING: WHEN YOU COPY PASTE H2 PACKAGE FROM MAVEN IT'S DEFAULT SETTING IS FOR TEST COMPILE YOU NEED TO CHANGE
 *              IT FIRST TO COMPILE!!
 *  7.  Finally when this is all ready we need to build the Spring framework plugin. Chances are it needs to be built
 *      in the latest version manners (see giflibrary project for reference)
 *      for further reference on Spring Gradle plugin: https://plugins.gradle.org/plugin/org.springframework.boot
 *  NEXT: ENTRY 2: BUILDING THE PROJECT STRUCTURES- list of things
 *      1.  As always we need manually build our own project structure starting by creating:root/src/main/java directory
 *      2.  inside the java directory create new package (com.mooracle.giflibh2) this is custom named
 *      3.  create new java class file and name it Application
 *  GOTO: Application.java for ENTRY 2
 * */

//1-7: install plugins for spring framework (still using the old version of things)
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.5.9.RELEASE"
    }
}

apply plugin: "org.springframework.boot"

apply plugin: 'java'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    // 1-2: https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-thymeleaf
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '1.5.9.RELEASE'

    // 1-3: https://mvnrepository.com/artifact/org.hashids/hashids
    compile group: 'org.hashids', name: 'hashids', version: '1.0.1'

    // 1-4: https://mvnrepository.com/artifact/org.springframework/spring-orm
    compile group: 'org.springframework', name: 'spring-orm', version: '4.3.14.RELEASE'

    // 1-4: https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.12.Final'

    // 1-5: https://mvnrepository.com/artifact/org.apache.tomcat/tomcat-dbcp
    compile group: 'org.apache.tomcat', name: 'tomcat-dbcp', version: '8.5.20'

    // 1-6: https://mvnrepository.com/artifact/com.h2database/h2
    compile group: 'com.h2database', name: 'h2', version: '1.4.196'
}
